version: '3.9'

services:
  postgres:
    container_name: postgres_db
    image: postgres:13
    restart: unless-stopped
    env_file: &env_file
      - .environments.stage/.env.auth
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis
    image: redis:7.0-alpine
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:1.19.2
    container_name: nginx
    volumes:
      - ./nginx/configs/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - auth_api
    ports:
      - "80:80"
    security_opt:
      - no-new-privileges
    tmpfs:
      - /var/cache/nginx:uid=101,gid=101,mode=0755

  auth_api:
    container_name: auth_api
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: *env_file
    volumes:
      - static_data:/app/static:ro
    depends_on:
      - redis
      - postgres
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 5s
      timeout: 5s
      retries: 5
    security_opt:
      - no-new-privileges
    read_only: true
    tmpfs:
      - /tmp

volumes:
  postgres_data:
  static_data: