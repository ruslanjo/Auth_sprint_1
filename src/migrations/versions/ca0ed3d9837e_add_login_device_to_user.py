"""add_login_device_to_User

Revision ID: ca0ed3d9837e
Revises: 
Create Date: 2023-02-28 01:56:54.895772

"""
from alembic import op
import sqlalchemy as sa

# revision identifiers, used by Alembic.
revision = 'ca0ed3d9837e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('name', sa.String(length=100), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('id'),
                    sa.UniqueConstraint('name')
                    )
    op.create_table('users',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('login', sa.String(length=100), nullable=False),
                    sa.Column('password', sa.String(length=70), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('id'),
                    sa.UniqueConstraint('login')
                    )
    op.create_table('user_role',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=True),
                    sa.Column('role_id', sa.UUID(), nullable=True),
                    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('id')
                    )
    op.create_table('users_sign_in',
                    sa.Column('id', sa.UUID(), nullable=False),
                    sa.Column('user_id', sa.UUID(), nullable=False),
                    sa.Column('timestamp', sa.DateTime(), nullable=True),
                    sa.Column('user_agent', sa.Text(), nullable=True),
                    sa.Column('user_device_type', sa.Text(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', 'user_device_type'),
                    sa.UniqueConstraint('id', 'user_device_type'),
                    postgresql_partition_by='LIST (user_device_type)'
                    )
    op.execute(
        """
        CREATE TABLE IF NOT EXISTS user_sign_in_smart
        PARTITION OF "users_sign_in" FOR VALUES IN ('smart')
        """
    )
    op.execute(
        """
        CREATE TABLE IF NOT EXISTS user_sign_in_mobile
        PARTITION OF "users_sign_in" FOR VALUES IN ('mobile')
        """
    )
    op.execute(
        """
        CREATE TABLE IF NOT EXISTS user_sign_in_web
        PARTITION OF "users_sign_in" FOR VALUES IN ('web')
        """
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users_sign_in')
    op.drop_table('user_role')
    op.drop_table('users')
    op.drop_table('roles')
    # ### end Alembic commands ###
